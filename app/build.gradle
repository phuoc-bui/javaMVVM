apply plugin: 'com.android.application'

android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    dataBinding.enabled = true

    // Create a variable called keystorePropertiesFile, and initialize it to your
    // keystore.properties file, in the rootProject folder.
    def keystorePropertiesFile = rootProject.file("keystore.properties")
    if (keystorePropertiesFile.exists()) {
        Properties keystoreProperties = new Properties()
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

        signingConfigs {
            release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile rootProject.file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
        android.buildTypes.release.signingConfig = signingConfigs.release
    } else  {
        android.buildTypes.release.signingConfig = null
    }

    defaultConfig {
        applicationId PACKAGE_NAME
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode VERSION_CODE as int
        versionName VERSION_NAME
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // Variable environment for productFlavors
    apply from: 'flavors.gradle'
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

// Android support
    implementation 'androidx.multidex:multidex:2.0.0'
    api 'com.google.android.material:material:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.0.0'
    implementation 'androidx.room:room-runtime:2.1.0-alpha01'
    annotationProcessor 'androidx.room:room-compiler:2.1.0-alpha01'
    implementation 'androidx.room:room-rxjava2:2.1.0-alpha01'

// Network
    implementation "com.google.code.gson:gson:$GSON_VERSION"
    implementation "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    implementation "com.squareup.okhttp3:logging-interceptor:$OK_HTTP_VERSION"
    implementation "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$RETROFIT_VERSION"
    implementation 'com.android.volley:volley:1.1.1'

// Firebase
    implementation "com.google.firebase:firebase-auth:$FIREBASE_VERSION"
    implementation "com.google.firebase:firebase-core:$FIREBASE_VERSION"
    implementation "com.google.firebase:firebase-messaging:$FIREBASE_MESSAGING_VERSION"

    // Dagger
    implementation "com.google.dagger:dagger-android:$DAGGER_VERSION"
    implementation "com.google.dagger:dagger-android-support:$DAGGER_VERSION"
    annotationProcessor "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    annotationProcessor "com.google.dagger:dagger-android-processor:$DAGGER_VERSION"

// GCM
    implementation "com.google.android.gms:play-services-maps:$GOOGLE_SERVICE_VERSION"
    implementation "com.google.android.gms:play-services-location:$GOOGLE_SERVICE_VERSION"
    implementation "com.google.android.gms:play-services-places:$GOOGLE_SERVICE_VERSION"
    implementation "com.google.maps.android:android-maps-utils:0.5"

// Reactive
    implementation "io.reactivex.rxjava2:rxandroid:$RX_ANDROID_VERSION"
    implementation "io.reactivex.rxjava2:rxjava:$RX_JAVA_VERSION"

// Image loader
    implementation "com.squareup.picasso:picasso:$PICASSO_VERSION"
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'

// Custom layout
    implementation 'org.adw.library:discrete-seekbar:1.0.1'
    implementation 'net.grandcentrix.tray:tray:0.12.0'
    implementation 'com.nikhilpanju.recyclerviewenhanced:recyclerviewenhanced:1.1.0'
    implementation 'com.daimajia.swipelayout:library:1.2.0@aar'
    implementation 'com.kevalpatel2106:ringtonepicker:1.1'

    implementation 'com.pacioianu.david:ink-page-indicator:1.3.0'
    //date picker
    implementation 'com.wdullaer:materialdatetimepicker:3.5.1'
    implementation 'com.karumi:dexter:4.2.0'
    implementation 'in.srain.cube:ultra-ptr:1.0.11'

// General
    //file utility
    implementation 'com.snatik:storage:2.1.0'
    implementation 'com.google.guava:guava:23.0'
    implementation 'commons-io:commons-io:2.6'
    //for observation image picker
    implementation 'com.droidninja:filepicker:2.1.3'
    implementation 'pub.devrel:easypermissions:1.1.3'

// testing
    testImplementation "junit:junit:$JUNIT_VERSION"
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation ('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}

configurations.all {
    resolutionStrategy {
        force "com.android.support:support-v4:$SUPPORT_PACKAGE_VERSION"
        force "com.android.support:support-v13:$SUPPORT_PACKAGE_VERSION"
    }
}



apply plugin: 'com.google.gms.google-services'
